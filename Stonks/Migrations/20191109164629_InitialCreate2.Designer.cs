// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stonks.Plugins.Database;

namespace Stonks.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20191109164629_InitialCreate2")]
    partial class InitialCreate2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Stonks.Models.Persons.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Stonks.Models.Portfolio", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<decimal>("cash")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("userId");

                    b.ToTable("Portfolio");
                });

            modelBuilder.Entity("Stonks.Models.Share", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PortfoliouserId")
                        .HasColumnType("int");

                    b.Property<decimal>("currentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("purchaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("stockId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("PortfoliouserId");

                    b.ToTable("Share");
                });

            modelBuilder.Entity("Stonks.Models.Transaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PortfoliouserId")
                        .HasColumnType("int");

                    b.Property<decimal>("assets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("cash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("verified")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("PortfoliouserId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Stonks.Models.Portfolio", b =>
                {
                    b.HasOne("Stonks.Models.Persons.User", null)
                        .WithOne("userPortfolio")
                        .HasForeignKey("Stonks.Models.Portfolio", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stonks.Models.Share", b =>
                {
                    b.HasOne("Stonks.Models.Portfolio", null)
                        .WithMany("listOfShares")
                        .HasForeignKey("PortfoliouserId");
                });

            modelBuilder.Entity("Stonks.Models.Transaction", b =>
                {
                    b.HasOne("Stonks.Models.Portfolio", null)
                        .WithMany("transactions")
                        .HasForeignKey("PortfoliouserId");
                });
#pragma warning restore 612, 618
        }
    }
}
